javascript is dynamically type language not static type becouse whenever we define variable we can not define the datatype like other languages , ex:-
   int a=10;
   char str="abc

// dynamic 
 const a=10 
 let b="string" 

here we just define keyword to create variale that value asign any type of data 


++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

#### How javascript run fles

When JavaScript runs a script, the engine (like V8 in Chrome) processes code in two phases:
1]- Memory Creation Phase (a.k.a. Hoisting Phase)
    JavaScript scans the code to allocate memory for variables and functions.

2]-Execution Phase
   JavaScript executes the code line by line.

Keyword	Hoisted	   Initialized in Memory   Phase	In TDZ?	   Access Before Declaration
var	   ✅ Yes	      ✅ undefined	         ❌ No	            ✅ Allowed (undefined)
let	   ✅ Yes	      ❌ No (TDZ)	         ✅ Yes	            ❌ Throws ReferenceError
const	   ✅ Yes	      ❌ No (TDZ)	         ✅ Yes	            ❌ Throws ReferenceError


console.log(a); // undefined
console.log(b); // ReferenceError
console.log(c); // ReferenceError

var a = 1;
let b = 2;
const c = 3;

a -> undefined     ✅ accessible
b -> TDZ           ❌ not accessible
c -> TDZ           ❌ not accessible

What is TDZ?
TDZ stands for Temporal Dead Zone.
It is the time between when a let or const variable is hoisted and when it is actually declared in the code.

During this time:
The variable exists in memory
But you cannot use it yet
If you try, JavaScript will throw a ReferenceError

### with function 
  function store definition of the function and whenever function call it's create new memory execution for the function parameter or variable and execution phase and return the value to global execution and then deleted every time 

function define            ✅ accessible
arrow function -> TDZ      ❌ not accessible
function expession -> TDZ  ❌ not accessible

Arrow functions and function expressions get into the TDZ (Temporal Dead Zone) because they are stored in variables declared using let or const.

++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++

  by default js is single threded and synchronous language 

  each operation waits for the last one to complete before executing
  code run one by one is call single threaded

  ## blocking code => block the flow of program (synchronous)
  ## non-blocking code => do not block execution (asynchronous)